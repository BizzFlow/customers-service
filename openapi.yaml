openapi: 3.0.1
info:
  title: BizzFlow - Customers API
  description: 'API for Customers API'
  termsOfService: http://swagger.io/terms/
  contact:
    email: rsouza01@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://customers.api.bizzflow.link/dev
tags:
- name: customers
  description: Operations about customers
  externalDocs:
    description: Find out more about our store
    url: http://swagger.io
paths:
  /customers:
    post:
      tags:
      - customers
      summary: Create customer
      description: This can only be done by the logged in user.
      operationId: createCustomer
      requestBody:
        description: Created customer object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        default:
          description: successful operation
          content: {}
      x-codegen-request-body-name: body
  /customers/{customer-uuid}:
    get:
      tags:
      - customers
      summary: Get customer by id
      operationId: getCustomerById
      parameters:
      - name: customer-uuid
        in: path
        description: 'The id that needs to be fetched'
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Customer'
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        400:
          description: Invalid id supplied
          content: {}
        404:
          description: Customer not found
          content: {}
    put:
      tags:
      - customers
      summary: Updated customer
      description: This can only be done by the logged in user.
      operationId: updateCustomer
      parameters:
      - name: customer-uuid
        in: path
        description: name that need to be updated
        required: true
        schema:
          type: string
      requestBody:
        description: Updated customer object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        400:
          description: Invalid customer supplied
          content: {}
        404:
          description: Customer not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - customers
      summary: Delete customer
      description: This can only be done by the logged in customer.
      operationId: deleteCustomer
      parameters:
      - name: customer-uuid
        in: path
        description: The name that needs to be deleted
        required: true
        schema:
          type: string
      responses:
        400:
          description: Invalid id supplied
          content: {}
        404:
          description: Customer not found
          content: {}
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nickname:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        customerStatus:
          type: integer
          description: Customer Status
          format: int32
        user-id:
          type: integer
          format: int64
      xml:
        name: Customer
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
